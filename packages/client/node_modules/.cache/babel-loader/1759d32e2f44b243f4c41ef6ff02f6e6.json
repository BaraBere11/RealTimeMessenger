{"ast":null,"code":"import{useContext,useEffect}from\"react\";import{AccountContext}from\"../AccountContext\";const useSocketSetup=(setFriendList,setMessages,socket)=>{const{setUser}=useContext(AccountContext);useEffect(()=>{socket.connect();socket.on(\"friends\",friendList=>{setFriendList(friendList);});socket.on(\"messages\",messages=>{setMessages(messages);});socket.on(\"dm\",message=>{setMessages(prevMsgs=>[message,...prevMsgs]);});socket.on(\"connected\",(status,username)=>{setFriendList(prevFriends=>{return[...prevFriends].map(friend=>{if(friend.username===username){friend.connected=status;}return friend;});});});socket.on(\"connect_error\",()=>{setUser({loggedIn:false});});return()=>{socket.off(\"connect_error\");socket.off(\"connected\");socket.off(\"friends\");socket.off(\"messages\");socket.off(\"dm\");};},[setUser,setFriendList,setMessages,socket]);};export default useSocketSetup;","map":{"version":3,"names":["useContext","useEffect","AccountContext","useSocketSetup","setFriendList","setMessages","socket","setUser","connect","on","friendList","messages","message","prevMsgs","status","username","prevFriends","map","friend","connected","loggedIn","off"],"sources":["/Users/apankov/Documents/WEB_Projects/messenger/packages/client/src/components/Home/useSocketSetup.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { AccountContext } from \"../AccountContext\";\n\nconst useSocketSetup = (setFriendList, setMessages, socket) => {\n  const { setUser } = useContext(AccountContext);\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"friends\", friendList => {\n      setFriendList(friendList);\n    });\n    socket.on(\"messages\", messages => {\n      setMessages(messages);\n    });\n    socket.on(\"dm\", message => {\n      setMessages(prevMsgs => [message, ...prevMsgs]);\n    });\n    socket.on(\"connected\", (status, username) => {\n      setFriendList(prevFriends => {\n        return [...prevFriends].map(friend => {\n          if (friend.username === username) {\n            friend.connected = status;\n          }\n          return friend;\n        });\n      });\n    });\n    socket.on(\"connect_error\", () => {\n      setUser({ loggedIn: false });\n    });\n    return () => {\n      socket.off(\"connect_error\");\n      socket.off(\"connected\");\n      socket.off(\"friends\");\n      socket.off(\"messages\");\n      socket.off(\"dm\");\n    };\n  }, [setUser, setFriendList, setMessages, socket]);\n};\n\nexport default useSocketSetup;\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7C,OAASC,cAAc,KAAQ,mBAAmB,CAElD,KAAM,CAAAC,cAAc,CAAGA,CAACC,aAAa,CAAEC,WAAW,CAAEC,MAAM,GAAK,CAC7D,KAAM,CAAEC,OAAQ,CAAC,CAAGP,UAAU,CAACE,cAAc,CAAC,CAC9CD,SAAS,CAAC,IAAM,CACdK,MAAM,CAACE,OAAO,CAAC,CAAC,CAChBF,MAAM,CAACG,EAAE,CAAC,SAAS,CAAEC,UAAU,EAAI,CACjCN,aAAa,CAACM,UAAU,CAAC,CAC3B,CAAC,CAAC,CACFJ,MAAM,CAACG,EAAE,CAAC,UAAU,CAAEE,QAAQ,EAAI,CAChCN,WAAW,CAACM,QAAQ,CAAC,CACvB,CAAC,CAAC,CACFL,MAAM,CAACG,EAAE,CAAC,IAAI,CAAEG,OAAO,EAAI,CACzBP,WAAW,CAACQ,QAAQ,EAAI,CAACD,OAAO,CAAE,GAAGC,QAAQ,CAAC,CAAC,CACjD,CAAC,CAAC,CACFP,MAAM,CAACG,EAAE,CAAC,WAAW,CAAE,CAACK,MAAM,CAAEC,QAAQ,GAAK,CAC3CX,aAAa,CAACY,WAAW,EAAI,CAC3B,MAAO,CAAC,GAAGA,WAAW,CAAC,CAACC,GAAG,CAACC,MAAM,EAAI,CACpC,GAAIA,MAAM,CAACH,QAAQ,GAAKA,QAAQ,CAAE,CAChCG,MAAM,CAACC,SAAS,CAAGL,MAAM,CAC3B,CACA,MAAO,CAAAI,MAAM,CACf,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAC,CACFZ,MAAM,CAACG,EAAE,CAAC,eAAe,CAAE,IAAM,CAC/BF,OAAO,CAAC,CAAEa,QAAQ,CAAE,KAAM,CAAC,CAAC,CAC9B,CAAC,CAAC,CACF,MAAO,IAAM,CACXd,MAAM,CAACe,GAAG,CAAC,eAAe,CAAC,CAC3Bf,MAAM,CAACe,GAAG,CAAC,WAAW,CAAC,CACvBf,MAAM,CAACe,GAAG,CAAC,SAAS,CAAC,CACrBf,MAAM,CAACe,GAAG,CAAC,UAAU,CAAC,CACtBf,MAAM,CAACe,GAAG,CAAC,IAAI,CAAC,CAClB,CAAC,CACH,CAAC,CAAE,CAACd,OAAO,CAAEH,aAAa,CAAEC,WAAW,CAAEC,MAAM,CAAC,CAAC,CACnD,CAAC,CAED,cAAe,CAAAH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}