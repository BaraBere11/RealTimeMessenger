{"ast":null,"code":"import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n  var _React$useState = React.useState(queries.map(function (query) {\n      return isSupported ? !!env.window.matchMedia(query).matches : false;\n    })),\n    matches = _React$useState[0],\n    setMatches = _React$useState[1];\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function () {\n      var listener = function listener() {\n        var isEqual = function isEqual(prev, curr) {\n          return prev.length === curr.length && prev.every(function (elem, idx) {\n            return elem === curr[idx];\n          });\n        };\n        var currentMatches = mediaQueryList.map(function (mediaQuery) {\n          return mediaQuery.matches;\n        });\n        if (!isEqual(matches, currentMatches)) {\n          setMatches(currentMatches);\n        }\n      };\n      env.window.addEventListener(\"resize\", listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        env.window.removeEventListener(\"resize\", listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n    hide = props.hide,\n    children = props.children;\n  var _useMediaQuery = useMediaQuery(breakpoint),\n    show = _useMediaQuery[0];\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n    breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n    below = props.below,\n    above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n    prefersReducedMotion = _useMediaQuery[0];\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n    isLight = _useMediaQuery2[0],\n    isDark = _useMediaQuery2[1];\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n      minWidth = _ref[1];\n    // given a following breakpoint\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n  if (!maxWidth) {\n    return query;\n  }\n  if (query) {\n    query += \" and \";\n  }\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\nvar _excluded = [\"query\"],\n  _excluded2 = [\"query\"];\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n    breakpoints = _useTheme.breakpoints;\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n  var _React$useState = React__default.useState(function () {\n      if (!defaultBreakpoint) {\n        return undefined;\n      }\n      var mediaQuery = mediaQueries.find(function (_ref) {\n        var breakpoint = _ref.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n      if (mediaQuery) {\n        mediaQuery.query;\n        var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded);\n        return breakpoint;\n      }\n      return undefined;\n    }),\n    currentBreakpoint = _React$useState[0],\n    setCurrentBreakpoint = _React$useState[1];\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref2) {\n      var query = _ref2.query,\n        breakpoint = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref3) {\n        var mediaQuery = _ref3.mediaQuery,\n          handleChange = _ref3.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n  var index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n      value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","map":{"version":3,"names":["useTheme","isBrowser","__DEV__","memoizedGet","isNumber","breakpoints","isArray","fromEntries","arrayToObjectNotation","React","React__default","useEnvironment","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","env","queries","Array","isSupported","window","_React$useState","useState","map","matchMedia","matches","setMatches","undefined","mediaQueryList","listenerList","listener","isEqual","prev","curr","length","every","elem","idx","currentMatches","mediaQuery","addEventListener","forEach","_","index","removeEventListener","Visibility","props","breakpoint","hide","children","_useMediaQuery","show","isVisible","rendered","Hide","useQuery","createElement","displayName","Show","getBreakpoint","theme","value","_props$breakpoint","below","above","bpBelow","bpAbove","usePrefersReducedMotion","prefersReducedMotion","useColorModePreference","_useMediaQuery2","isLight","isDark","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","createMediaQueries","entries","sort","a","b","Number","parseInt","_ref","arr","minWidth","next","maxWidth","createMediaQueryString","hasMinWidth","toMediaString","subtract","measurementRegex","calculateMeasurement","modifier","replace","match","parseFloat","endsWith","_excluded","_excluded2","useBreakpoint","defaultBreakpoint","_useTheme","mediaQueries","useMemo","base","find","currentBreakpoint","setCurrentBreakpoint","current","update","useCallback","listeners","Set","_ref2","handleChange","addListener","add","removeListener","_ref3","clear","getClosestValue","values","breakpoints$1","stopIndex","_key","useBreakpointValue","obj"],"sources":["/Users/apankov/Documents/WEB_Projects/messenger/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function () {\n      var listener = function listener() {\n        var isEqual = function isEqual(prev, curr) {\n          return prev.length === curr.length && prev.every(function (elem, idx) {\n            return elem === curr[idx];\n          });\n        };\n\n        var currentMatches = mediaQueryList.map(function (mediaQuery) {\n          return mediaQuery.matches;\n        });\n\n        if (!isEqual(matches, currentMatches)) {\n          setMatches(currentMatches);\n        }\n      };\n\n      env.window.addEventListener(\"resize\", listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        env.window.removeEventListener(\"resize\", listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n        minWidth = _ref[1];\n    // given a following breakpoint\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n\n  if (!maxWidth) {\n    return query;\n  }\n\n  if (query) {\n    query += \" and \";\n  }\n\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\n\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\n\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\n\nvar _excluded = [\"query\"],\n    _excluded2 = [\"query\"];\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (!defaultBreakpoint) {\n      return undefined;\n    }\n\n    var mediaQuery = mediaQueries.find(function (_ref) {\n      var breakpoint = _ref.breakpoint;\n      return breakpoint === defaultBreakpoint;\n    });\n\n    if (mediaQuery) {\n      mediaQuery.query;\n          var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded);\n\n      return breakpoint;\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref2) {\n      var query = _ref2.query,\n          breakpoint = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref3) {\n        var mediaQuery = _ref3.mediaQuery,\n            handleChange = _ref3.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}